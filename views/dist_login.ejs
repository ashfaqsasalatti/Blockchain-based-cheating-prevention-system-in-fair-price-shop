<!DOCTYPE html>
<html>

<head>
  <title>Bootstrap Example</title>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css" />
  <link rel="stylesheet" href="css.css" />
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.3/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
  <script src="https://cdn.ethers.io/lib/ethers-5.2.umd.min.js" type="application/javascript"></script>
  <script src="data.js"></script>
  <style>
    #f {
      padding: 10px;
      margin-top: 25px;
      width: 40%;
      overflow: hidden;
      margin-left: 25px;
      float: left;
    }

    #f h2 {
      text-align: center;
    }

    .profile-card-container {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.5);
      z-index: 999;
    }

    .profile-card {
      display: flex;
      flex-direction: column;
      align-items: center;
      max-width: 400px;
      width: 100%;
      border-radius: 25px;
      padding: 30px;
      border: 1px solid #ffffff40;
      box-shadow: 0 5px 20px rgba(0, 0, 0, 0.4);
      background-color: #fff;
      margin: auto;
      margin-top: 50px;
    }

    .close-btn {
      position: absolute;
      margin-top: 50px;
      top: 15px;
      right: 800px;
      font-size: 24px;
      color: #000;
      cursor: pointer;
    }

    @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@200;300;400;500&display=swap');

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Poppins', sans-serif;
    }

    .main {
      width: 100%;
      height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
      background-image: url(https://tinypic.host/images/2023/03/20/Shapes-Abstraction-Background-2466799.jpg);
      background-position: center;
      background-size: cover;
    }

    .profile-card {
      display: flex;
      flex-direction: column;
      align-items: center;
      max-width: 400px;
      width: 100%;
      border-radius: 25px;
      padding: 30px;
      border: 1px solid #ffffff40;
      box-shadow: 0 5px 20px rgba(0, 0, 0, 0.4);
    }

    .data {
      display: flex;
      flex-direction: column;
      align-items: center;
      margin-top: 15px;
    }

    .data h2 {
      font-size: 33px;
      font-weight: 600;
    }

    span {
      font-size: 18px;
    }

    .row {
      display: flex;
      align-items: center;
      margin-top: 30px;
    }

    .row .info {
      text-align: center;
      padding: 0 20px;
    }

    .buttons {
      display: flex;
      align-items: center;
      margin-top: 30px;
    }

    .buttons .btn {
      color: #fff;
      text-decoration: none;
      margin: 0 20px;
      padding: 8px 25px;
      border-radius: 25px;
      font-size: 18px;
      white-space: nowrap;
      background: linear-gradient(to left, #33ccff 0%, #ff99cc 100%);
    }

    .buttons .btn:hover {
      box-shadow: inset 0 5px 20px rgba(0, 0, 0, 0.4);
    }

    .hidden {
      display: none;
    }
  </style>
</head>

<body>
  <nav class="navbar navbar-default">
    <div class="container-fluid">
      <div class="navbar-header">
        <img class="navbar-brand" src="logo.jpg" />
      </div>
      <ul class="nav navbar-nav">
        <li><a href="/">Home</a></li>
        <li><a href="/distribute">Issue good</a></li>
        <li><a href="/add">Register</a></li>
        <li><a href="/repo">Reports</a></li>
      </ul>
    </div>
  </nav>

  <form id="give">
    <div class="imgcontainer"></div>

    <div class="container">
      <label><b>Card Number</b></label>
      <input type="text" placeholder="Enter Ration card number" name="id" id="id" required />

      <button type="submit">Send OTP</button>
      <div id="parent"></div>
    </div>
  </form>


  <div>

    <div class="profile-card-container" id="profile-card-container">
      <div class="profile-card">
        <span class="close-btn" id="close-profile-card">&times;</span>
        <div class="data">
          <h2>Distribute:</h2>
        </div>
        <div id="hi">
        </div>


      </div>
      <div class="buttons">

        <button id="bot" class="btn">Continue</button>
      </div>
    </div>
  </div>
  <div id="f">
    <form id="verifyCust">
      <h2>Verify Customer details</h2>
      <div class="form-group">
        <label>Ration Card Number</label>
        <input type="text" class="form-control" name="id" placeholder="Enter ID" />
      </div>
      <div class="form-check form-check-inline">
        <input class="form-check-input" type="radio" name="a" value="1" />
        <label class="form-check-label">Accept</label>
      </div>
      <div class="form-check form-check-inline">
        <input class="form-check-input" type="radio" name="a" value="0" />
        <label class="form-check-label">Reject</label>
      </div>
      <button type="submit" class="btn btn-primary">Submit</button>
    </form>
  </div>

  <div id="f">
    <form id="nextCust">
      <button type="submit" class="btn btn-primary btn-lg">
        Next Customer To Verify
      </button>
    </form>
  </div>

  <div id="f">
    <form id="delCust">
      <h2>Delete Customer</h2>
      <div class="form-group">
        <label>Ration Card Number</label>
        <input type="text" class="form-control" name="id" placeholder="Enter ID" />
      </div>
      <div class="form-check form-check-inline">
        <input class="form-check-input" type="radio" name="a" id="a" value="1" />
        <label class="form-check-label">Delete req was by customer</label>
      </div>
      <div class="form-check form-check-inline">
        <input class="form-check-input" type="radio" name="a" id="a" value="0" />
        <label class="form-check-label">other issue</label>
      </div>
      <button type="submit" class="btn btn-primary">Submit</button>
    </form>
  </div>


  <!-- Distribution -->
  <script>

    var x, ph;
    OTP = 974005;

    // Create the HTML content for the form
    const formElement = document.createElement("form");
    formElement.id = "verifyOtp";

    formElement.innerHTML = `
    <form  id="verifyOtp">
      <div class="container" style="padding-top: 100px;">
        <label><b>Enter OTP</b></label>
        <input type="text" placeholder="OTP" name="otp" required >
        <input type="submit">
        </div>
    </form>
        `;


    const give = document.getElementById("give");
    const parentElement = document.getElementById("parent");






    give.addEventListener("submit", async function (event) {
      event.preventDefault(); // prevent form from submitting


      const formData = new FormData(give);
      const id = formData.get("id");
      x = id

      const result = await contract.cal(id);

      const showProfileCardButton = document.getElementById('show-profile-card');
      const closeProfileCardButton = document.getElementById('close-profile-card');
      const profileCardContainer = document.getElementById('profile-card-container');


      const newData = document.getElementById('hi');
      newData.innerHTML = `
        <div class="info">
          <h3>Rice</h3>
          <span>${result.rice.toString()}</span>
        </div>
        <div class="info">
          <h3>Wheat</h3>
          <span>${result.wheat.toString()}</span>
        </div>
        <div class="info">
          <h3>Sugar</h3>
          <span>${result.sugar.toString()}</span>
        </div>
        <br>
        <div class="info">
          <h3>Palm Oil</h3>
          <span>${result.palm_oil.toString()}</span>
        </div>
        <div class="info">
          <h3>Other</h3>
          <span>${result.other.toString()}</span>
        </div>
        `;

      profileCardContainer.style.display = 'block';


      closeProfileCardButton.addEventListener('click', function () {
        profileCardContainer.style.display = 'none';
      });


      parentElement.appendChild(formElement);
      const verify = document.getElementById("verifyOtp");
      verify.addEventListener("submit", async (event) => {
        event.preventDefault();
        const formData = new FormData(verify);
        const otp = formData.get("otp");
        console.log(otp)
        alert(OTP)

        if (OTP == otp) {
          console.log(otp)
          alert(OTP)
          contract.distribute(x).then(function (result) {
            console.log(result);
            console.log(result.data);
            alert("Transaction successful!");
            window.location.href = "/distribute";
          }).catch(function (error) {
            console.log(error);
            alert(error)
            window.location.href = "/distribute";
          });
        }
        else {
          alert("Wrong otp");
        }

      });




    });

  </script>

  <!-- next customer to veify  -->
  <script>
    const verifyCust = document.getElementById("verifyCust");

    verifyCust.addEventListener("submit", async function (event) {
      event.preventDefault(); // prevent form from submitting


      const formData = new FormData(verifyCust);
      const id = formData.get("id");
      const a = formData.get("a");
      const result = await contract.verifyCustomer(id, a);
      await result.wait();
      if (result.hash) {
        console.log("Transaction successful!");
      } else {
        console.log("Transaction failed!");
      }

    });

  </script>

  <!-- next cust to verify -->
  <script>
    const nextCust = document.getElementById("nextCust");

    nextCust.addEventListener("submit", async function (event) {
      event.preventDefault(); // prevent form from submitting



      const result = await contract.nextCustomer();

      console.log(result.toString());
    });


  </script>

  <!-- Delete customer -->
  <script>
    const delCust = document.getElementById("delCust");

    delCust.addEventListener("submit", async function (event) {
      event.preventDefault(); // prevent form from submitting


      const formData = new FormData(delCust);
      const id = formData.get("id");
      const a = formData.get("a");
      const result = await contract.delCust(id, a);
      await result.wait();
      if (result.hash) {
        console.log("Transaction successful!");
      } else {
        console.log("Transaction failed!");
      }

    });

  </script>
</body>

</html>