<!DOCTYPE html>
<html>

<head>
  <title>Bootstrap Example</title>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css" />
  <link rel="stylesheet" href="css.css" />
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.3/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
  <script src="https://cdn.ethers.io/lib/ethers-5.2.umd.min.js" type="application/javascript"></script>
  <script src="data.js"></script>
  <style>
    #f {

      padding: 10px;
      margin-top: 25px;
      width: 30%;
      margin-left: 25px;
      float: left;
    }

    #f h2 {
      text-align: center;
    }
  </style>
</head>

<body>
  <nav class="navbar navbar-default">
    <div class="container-fluid">
      <div class="navbar-header">
        <img class="navbar-brand" src="logo.jpg" />
      </div>
      <ul class="nav navbar-nav">
        <li><a href="/">Home</a></li>
        <li><a href="/distribute">Issue good</a></li>
        <li><a href="/add">Register</a></li>
        <li><a href="/repo">Reports</a></li>
      </ul>
    </div>
  </nav>

  <form id="give">
    <div class="imgcontainer"></div>

    <div class="container">
      <label><b>Card Number</b></label>
      <input type="text" placeholder="Enter Ration card number" name="id" id="id" required />

      <button type="submit">Login</button>
      <div id="parent"></div>
    </div>
  </form>

  <div id="f">
    <form id="verifyCust">
      <h2>Verify Customer details</h2>
      <div class="form-group">
        <label>Ration Card Number</label>
        <input type="text" class="form-control" name="id" placeholder="Enter ID" />
      </div>
      <div class="form-check form-check-inline">
        <input class="form-check-input" type="radio" name="a" value="1" />
        <label class="form-check-label">Accept</label>
      </div>
      <div class="form-check form-check-inline">
        <input class="form-check-input" type="radio" name="a" value="0" />
        <label class="form-check-label">Reject</label>
      </div>
      <button type="submit" class="btn btn-primary">Submit</button>
    </form>
  </div>

  <div id="f">
    <form id="nextCust">
      <button type="submit" class="btn btn-primary btn-lg">
        Next Customer To Verify
      </button>
    </form>
  </div>

  <div id="f">
    <form id="delCust">
      <h2>Delete Customer</h2>
      <div class="form-group">
        <label>Ration Card Number</label>
        <input type="text" class="form-control" name="id" placeholder="Enter ID" />
      </div>
      <div class="form-check form-check-inline">
        <input class="form-check-input" type="radio" name="a" id="a" value="1" />
        <label class="form-check-label">Delete req was by customer</label>
      </div>
      <div class="form-check form-check-inline">
        <input class="form-check-input" type="radio" name="a" id="a" value="0" />
        <label class="form-check-label">other issue</label>
      </div>
      <button type="submit" class="btn btn-primary">Submit</button>
    </form>
  </div>

  <!-- Distribution -->
  <script>

    var x, ph;
    OTP = 974005;

    // Create the HTML content for the form
    const formElement = document.createElement("form");
    formElement.id = "verifyOtp";

    formElement.innerHTML = `
    <form  id="verifyOtp">
      <div class="container" style="padding-top: 100px;">
        <label><b>Enter OTP</b></label>
        <input type="text" placeholder="OTP" name="otp" required >
        <input type="submit">
        </div>
    </form>
        `;


    const give = document.getElementById("give");
    const parentElement = document.getElementById("parent");






    give.addEventListener("submit", async function (event) {
      event.preventDefault(); // prevent form from submitting


      const formData = new FormData(give);
      const id = formData.get("id");
      x = id

      const result = await contract.cal(id);
      alert("give\n" + "Rice:" + result.rice.toString() + "\nWheat:" + result.wheat.toString() + "\nSugar:" + result.sugar.toString() + "\nPalm_oil:" + result.palm_oil.toString() + "\nOther:" + result.other.toString())


      parentElement.appendChild(formElement);

      const verify = document.getElementById("verifyOtp");
      verify.addEventListener("submit", async (event) => {
        event.preventDefault();
        const formData = new FormData(verify);
        const otp = formData.get("otp");

        if (OTP == otp) {

          contract.distribute(x).then(function (result) {
            console.log(result);
            alert("Transaction successful!");
          }).catch(function (error) {
            console.log(error);
          });


          window.location.href = "/distribute";
        }
        else {
          alert("Wrong otp");
        }
      })

    });

  </script>

  <!-- next customer to veify  -->
  <script>
    const verifyCust = document.getElementById("verifyCust");

    verifyCust.addEventListener("submit", async function (event) {
      event.preventDefault(); // prevent form from submitting


      const formData = new FormData(verifyCust);
      const id = formData.get("id");
      const a = formData.get("a");
      const result = await contract.verifyCustomer(id, a);
      await result.wait();
      if (result.hash) {
        console.log("Transaction successful!");
      } else {
        console.log("Transaction failed!");
      }

    });

  </script>

  <!-- next cust to verify -->
  <script>
    const nextCust = document.getElementById("nextCust");

    nextCust.addEventListener("submit", async function (event) {
      event.preventDefault(); // prevent form from submitting



      const result = await contract.nextCustomer();

      console.log(result.toString());
    });


  </script>

  <!-- Delete customer -->
  <script>
    const delCust = document.getElementById("delCust");

    delCust.addEventListener("submit", async function (event) {
      event.preventDefault(); // prevent form from submitting


      const formData = new FormData(delCust);
      const id = formData.get("id");
      const a = formData.get("a");
      const result = await contract.delCust(id, a);
      await result.wait();
      if (result.hash) {
        console.log("Transaction successful!");
      } else {
        console.log("Transaction failed!");
      }

    });

  </script>
</body>

</html>